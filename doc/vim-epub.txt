*vim-epub.txt* A plugin for EPUB edition. U DONT'SAY?

===============================================================================
CONTENTS                                                               *vim-epub*

   1. Intro .................................................... |vepub-intro|
   2. Requirements ...................................... |vepub-requirements|

   3. Usage .................................................... |vepub-usage|
      3.1 Application the commands ............................. |vepub-field|
      3.2 Commands .......................................... |vepub-commands|
      3.3 Extras .............................................. |vepub-extras|

   4. Licence ................................................ |vepub-licence|
   5. Remerciements ................................. |vepub-acknowledgements|

===============================================================================
1. Intro                                                            *vepub-intro*

Versions of this help file in other languages are available in the doc/ folder
of this plugin.

Available translations:
  - francais (french)

===============================================================================
2. Requirements                                              *vepub-requirements*

You need a vim copy compiled with python support. Try:

	:version

If you see +python, it's ok.

You'll also need unzip.

===============================================================================
3. Usage                                                            *vepub-usage*

vim-epub doesn't define any mapping. Map all the commands you want.

Some commands - typically those who add files − will need a ':edit'
to reveal  their action and  update the EPUB's contents  buffer. They
are marked with {NeedRefresh}.

-------------------------------------------------------------------------------
3.1 Application of the commands                                     *vepub-field*

Vim-EPUB use zip.vim to open and modify an EPUB's content. At the opening of
a file, the buffer of the EPUB's file contents is provided by zip.vim.

This buffer may look like this:

	zip.vim version v27
	" Browsing zipfile /home/kaboom/test.epub
	" Select a file with cursor and press ENTER

	mimetype
	OEBPS/Images/Foo.png
	OEBPS/toc.ncx
	OEBPS/content.opf
	OEBPS/Styles/Style.css
	OEBPS/Text/Text.xhtml
	META-INF/container.xml

Some Vim-EPUB's commands are only usable on this "EPUB's content" buffer.
In this documentation, they are marked with {OnEPUBContentsBuffer}.

Some Vim-EPUB's commands are only usable on text files' buffers (xhtml…).
In this documentation, they are marked with {OnTextBuffer}.

At last, Some Vim-EPUB's commands are usable on any buffer.
In this documentation, they are marked with {OnAnyBuffer}.

-------------------------------------------------------------------------------
3.2 Commands                                                     *vepub-commands*

AddEmptyPage ~

{OnAnyBuffer} {NeedRefresh}

Usage:
        :AddEmptyPage


Prompt for a new empty page name and add a new page (xhtml file) in the EPUB.


AddEmptyCSS ~

{OnAnyBuffer} {NeedRefresh}

Usage:
        :AddEmptyCSS

Prompt for a new empty css  stylesheet name and add a stylesheet page
(css file) in the EPUB.


AddMedia ~

{OnAnyBuffer} {NeedRefresh}

Usage:
        :AddMedia

Prompt for an existing media path and add it in the EPUB.
The "media" can be: images,(X)HTML,CSS,fonts…


AddTocPage ~

{OnAnyBuffer} {NeedRefresh}

Usage:
        :AddTocPage

Add a table of contents page called TableOfContents.xhtml in the EPUB.


RenameFile ~

{OnEPUBContentsBuffer} {NeedRefresh}

Usage:
	:RenameFile


Rename the  file on the  current line and fix  all the links  to this
renamed file on the others files of the EPUB.


MergeFiles ~

{OnEPUBContentsBuffer} {NeedRefresh}

Usage:
	:MergeFiles

Merge the files on the current and next lines, either in the file on the
current line or in another filepath given by the user.


BackupEPUB ~

{OnAnyBuffer}

Usage:
	:BackupEPUB


Make a backup  file of the EPUB named x.epub.user.bak  where x is the
name given to the backup.


DiffEPUB ~

{OnAnyBuffer}

Usage:
        :DiffEPUB

Options:
        g:VimEPUB_DiffSplit
            Split style used

            "horizontal" for an horizontal split (sp) (default)
            "vertical" for a vertical split (vsp)

Prompt the user for a EPUB file path and compares the current EPUB to it.


DiffLastEPUB ~

{OnAnyBuffer}

Usage:
        :DiffLastEPUB

Options:
        g:VimEPUB_DiffSplit
            Split style used

            "horizontal" for an horizontal split (sp) (default)
            "vertical" for a vertical split (vsp)

Compares the current EPUB to the last backup made by Vim-EPUB.


LinkToCss ~

{OnTextBuffer}

Usage:
        :LinkToCss


Prompt for an existing CSS file in the EPUB's contents and add its definition
on the current line.


OpenReader ~

{OnAnyBuffer}

Usage:
        :OpenReader

Options:
	g:VimEPUB_OpenCommand
	     Program used to open the EPUB, overriding the OS settings.

	     "none" the command don't override the OS settings.
		    (default)

Open the EPUB file in the system-defined ebook viewer.

-------------------------------------------------------------------------------
3.3 Extras                                                         *vepub-extras*

Snippets ~

Snippets for UltiSnips are packaged with vim-epub. Copy them to your Snippets
directory for a better editing experience.

Check the vim-epub folder.

===============================================================================
4. Licence                                                        *vepub-licence*

vim-epub is released under the GNU General Public Licence version 3 (GPL v3).

===============================================================================
5. Acknowledgements                                      *vepub-acknowledgements*

To  Mikhail  Gusarov  for  path.py,  a  wrapper  around  os,  shutil,
tempfile…

    https://github.com/jaroco/path.py

To Nic West for epubdiff, a diff checker for two EPUB files.

    https://github.com/nicwest/epubdiff
    http://www.nic-west.com/

To Kumar McMillan, for his brilliant talk about Python and Unicode
- a subject that made me regularly mad.

    http://farmdev.com/talks/unicode/

vim:tw=78:ts=8:ft=help:norl:spelllang=en:
